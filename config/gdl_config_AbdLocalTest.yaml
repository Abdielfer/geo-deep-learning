defaults:
  - model: gdl_unet
  - verify: default_verify
  - tiling: default_tiling_flood
  - training: default_training
  - loss: binary/softbce
  - optimizer: adamw
  - callbacks: default_callbacks
  - scheduler: plateau
  - dataset: test_ci_segmentation_binary
  - augmentation: basic_augmentation_segmentation
  - tracker: # set logger here or use command line (e.g. `python GDL.py tracker=mlflow`)
  - visualization: default_visualization
  - inference: default_binary
  - hydra: default
  - _self_

general:
  # path to original working directory
  # hydra hijacks working directory by changing it to the current log directory,
  # so it's useful to have this path as a special variable
  # learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
  task: segmentation
  work_dir: ${hydra:runtime.cwd}  # where the code is executed
  config_name: ${hydra:job.config_name}
  config_override_dirname: ${hydra:job.override_dirname}
  config_path: ${hydra:runtime.config_sources}
  project_name: Percentage_1_intensSampl_tst
  workspace: C1_Test
  max_epochs: 20 # for train only
  min_epochs: 1 # for train only
  raw_data_dir: C:\Users\abfernan\CrossCanFloodMapping\DatasetCNNFlood\RawData\Class1
  raw_data_csv: C:\Users\abfernan\CrossCanFloodMapping\DatasetCNNFlood\RawData\Class1TestSet.csv
  tiling_data_dir: ${general.raw_data_dir} # where the patches will be saved
  save_weights_dir: saved_model/${general.project_name}

print_config: False # save the config in the log folder
mode: {verify, tiling, train, inference, evaluate}
debug: False #False # will print the complete yaml config plus run a validation test
